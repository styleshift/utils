{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AASO,IAAM,EAAK,GAAA;AAGX,IAAM,EAAK,GAAA;AAGX,IAAM,EAAK,GAAA;AAMX,IAAM,KAAK,CAAI,GAAA,MAAA,KAAiC,EAAG,CAAA,EAAA,CAAG,MAAM,CAAC","file":"index.mjs","sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport { tv, type TV } from 'tailwind-variants';\n\n/** Re-export types for consumer usage */\nexport type { ClassValue, VariantProps, TV };\n\n/** Merges Tailwind classes without conflicts */\nexport const tw = twMerge;\n\n/** Conditionally joins class names */\nexport const cx = clsx;\n\n/** Creates variant-based className builders */\nexport const cv = cva;\n\n/** Creates type-safe Tailwind variants */\nexport { tv };\n\n/** Combines and merges class names efficiently */\nexport const cn = (...inputs: ClassValue[]): string => tw(cx(inputs));\n"]}